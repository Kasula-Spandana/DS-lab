#include<stdio.h>
#include<stdlib.h>
#define size 5
struct node{
    int data;
    struct node *prev;
    struct node *next;
};
struct node *head = NULL,*tail = NULL,*cur,*temp,*temp1;
struct node *create(){
    int n;
    printf("enter number of nodes\n");
    scanf("%d",&n);
    while(n--){
        cur = (struct node*)malloc(sizeof(struct node));
        scanf("%d",&cur -> data);
        cur -> next = NULL;
        cur -> prev = NULL;
        if(head == NULL){
            head = tail = cur;
        }
        else{
            tail -> next = cur;
            cur -> prev = tail;
            tail = cur;
        }
    }
    return head;
}
struct node *insert(int ele){
    cur = (struct node*)malloc(sizeof(struct node));
    cur -> data = ele;
    cur -> next = head;
    cur -> prev = NULL;
    head -> prev = cur;
    head = cur;
    return head;
}
struct node *delete(struct node *head){
    temp = head;
    head = head -> next;
    head -> prev = NULL;
    printf("deleted element %d\n",temp -> data);
    free(temp);
    return head;
}
void display(struct node *head){
    printf("elements are:\n");
    temp = head;
    while(temp -> next != NULL){
        printf("%d <-> ",temp -> data);
        temp = temp -> next;
    }
    printf("%d\n",temp -> data);
}
int main(){
    int ele,key,pos,ch;
    while(1){
        printf("1 - create\n2 - insert\n3 - delete\n4 - display\n5 - exit\n");
        printf("enter your choice:\n");
        scanf("%d",&ch);
        switch(ch){
            case 1:
                head = create();
                break;
            case 2:
                scanf("%d",&ele);
                head = insert(ele);
                break;
            case 3:
                head = delete(head);
                break;
            case 4:
                display(head);
                break;
            case 5:
                exit(0);
        }
    }
}

OUTPUT:
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
1
enter number of nodes
5
1
2
3
4
5
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
4
elements are:
1 <-> 2 <-> 3 <-> 4 <-> 5
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
2
6
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
4
elements are:
6 <-> 1 <-> 2 <-> 3 <-> 4 <-> 5
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
3
deleted element 6
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
4
elements are:
1 <-> 2 <-> 3 <-> 4 <-> 5
1 - create
2 - insert
3 - delete
4 - display
5 - exit
enter your choice:
5
